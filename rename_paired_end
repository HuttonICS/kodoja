# This script is needed to be able to identify sequences easily when they are paired-end.

	$ cd /home/ae42909/synthetic_RNAseq/


####### Fastq format - every fourth line is a header. Example fastq: synthetic potato with viruses file

# Sort by header: The cat command will print the file content (to STDOUT). The paste command will join the four lines of a FASTQ entry into a single line, each original line separated by a tab. The sort command will sort each line using everything before the first space (which is our sequence identifer). The tr command will replace the tabs with line breaks, which is basically an undo of the paste command (in a simplified explanation). The “>” sign will write the sorted output to the file specified after it.

	$ cat example_fastq.fastq | paste - - - - | sort -k1,1 -t " " | tr "\t" "\n" > example_fastq_sorted.fastq

# Make  file of IDs - one each line
  	$ awk 'NR == 1 || NR % 4 == 1' example_fastq_sorted.fastq > fastq_IDs

# Rename the fastq file N/1

  	$ cat example_fastq_sorted.fastq | awk '{print (NR%4 == 1) ? ++i "/1" : $0 }''  > example_fastq_renamed.fastq


####### Fasta format - header satrt with ">". Example fasta (4 sequences copied from SRA study SRP069073): example_fasta.fasta

# Make fasta file so that it is two lines, rather than multiple

       $ awk '/^>/ {printf("\n%s\n",$0);next; } { printf("%s",$0);}  END {printf("\n");}' < example_fasta.fasta > /example_fasta_2lines.fasta

# Sort by header

       $ cat example_fasta_2lines.fasta | paste - - | sort -k1,1 -t " " | tr "\t" "\n" > example_fasta_sorted.fasta
       
# Make new file with fasta IDs - one each line
       $ awk 'NR == 1 || NR % 2 == 1' example_fastq_sorted.fasta > fasta_IDs

# Rename the fastq file @1_N

  	$ cat example_fastq_sorted.fastq | awk '{print (NR%4 == 1) ? ++i "/1" : $0 }'

### Fasta format for transeq results. The standard format for 6-frame translation is "seqID_1" where "_1" is for the frame (can be 1:6)


cat example_transeq | awk '{print (NR%2 == 1) ? for i in $(seq 1 6) : $2 }'

awk 'NR==2{$2=$2"X"; print}' file

cat example_transeq | awk 'NR==2{-1; print}' 

for i in $(seq 1 6);

${a::-1}




       